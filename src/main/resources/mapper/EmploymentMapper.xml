<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.ofornet.mapper.EmploymentMapper">
  <resultMap id="BaseResultMap" type="com.hust.ofornet.pojo.Employment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employmentCode" jdbcType="VARCHAR" property="employmentCode" />
    <result column="coid" jdbcType="INTEGER" property="coid" />
    <result column="rid" jdbcType="INTEGER" property="rid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="jobid" jdbcType="INTEGER" property="jobid" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="employStatus" jdbcType="VARCHAR" property="employStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, employmentCode, coid, rid, uid, jobid, message, createDate, employStatus
  </sql>
  <select id="selectByExample" parameterType="com.hust.ofornet.pojo.EmploymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from employment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hust.ofornet.pojo.Employment" useGeneratedKeys="true">
    insert into employment (employmentCode, coid, rid, 
      uid, jobid, message, 
      createDate, employStatus)
    values (#{employmentCode,jdbcType=VARCHAR}, #{coid,jdbcType=INTEGER}, #{rid,jdbcType=INTEGER}, 
      #{uid,jdbcType=INTEGER}, #{jobid,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{employStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hust.ofornet.pojo.Employment" useGeneratedKeys="true">
    insert into employment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employmentCode != null">
        employmentCode,
      </if>
      <if test="coid != null">
        coid,
      </if>
      <if test="rid != null">
        rid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="jobid != null">
        jobid,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="employStatus != null">
        employStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employmentCode != null">
        #{employmentCode,jdbcType=VARCHAR},
      </if>
      <if test="coid != null">
        #{coid,jdbcType=INTEGER},
      </if>
      <if test="rid != null">
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="jobid != null">
        #{jobid,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="employStatus != null">
        #{employStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.ofornet.pojo.Employment">
    update employment
    <set>
      <if test="employmentCode != null">
        employmentCode = #{employmentCode,jdbcType=VARCHAR},
      </if>
      <if test="coid != null">
        coid = #{coid,jdbcType=INTEGER},
      </if>
      <if test="rid != null">
        rid = #{rid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="jobid != null">
        jobid = #{jobid,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="employStatus != null">
        employStatus = #{employStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.ofornet.pojo.Employment">
    update employment
    set employmentCode = #{employmentCode,jdbcType=VARCHAR},
      coid = #{coid,jdbcType=INTEGER},
      rid = #{rid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      jobid = #{jobid,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      employStatus = #{employStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>